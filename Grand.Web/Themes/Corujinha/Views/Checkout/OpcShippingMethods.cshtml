@model CheckoutShippingMethodModel
@inject IWebHelper webHelper
@{ 
    var storeLocation = webHelper.GetStoreLocation();
}
<script>
    function loadPartialView(arg_value) {
        var url = '@(storeLocation)checkout/GetShippingFormPartialView?shippingOption=' + arg_value;
        $.ajax({
            url: url,
            success: function (data) {
                $('#shipping_form').html(data);
            }
        });
    }
</script>

<div class="onepage-checkout-shipping-method">
    @await Component.InvokeAsync("Widget", new { widgetZone = "op_checkout_shipping_method_top" })
    <div class="mb-3">
        <label class="form-label mb-3">Escolha um método de envio</label>
        @if (Model.Warnings.Count > 0)
        {
            <div class="message-error">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }
        else
        {
            var selectedShippingMethod = Model.ShippingMethods.FirstOrDefault(x => x.Selected);
            if (selectedShippingMethod != null)
            {
                <script>
                    $(document).ready(function () {
                        loadPartialView('@(selectedShippingMethod.Name)___@(selectedShippingMethod.ShippingRateComputationMethodSystemName)');
                    });
                </script>
            }

            @for (int i = 0; i < Model.ShippingMethods.Count; i++)
            {
                var shippingMethod = Model.ShippingMethods[i];

                <div class="form-check mb-3 pb-2 border-bottom">
                    <input id="shippingoption_@(i)"
                           class="form-check-input"
                           type="radio"
                           name="shippingoption"
                           value="@(shippingMethod.Name)___@(shippingMethod.ShippingRateComputationMethodSystemName)"
                           onclick="loadPartialView(value)" />
                    <label class="form-check-label" for="shippingoption_@(i)">
                        <strong>@shippingMethod.Name (@shippingMethod.Fee)</strong> - @shippingMethod.Description
                    </label>
                </div>
            }
            <div id="shipping_form"></div>
        }
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = "op_checkout_shipping_method_bottom" })
</div>
