@model ProductDetailsModel
@using Microsoft.AspNetCore.Http.Extensions
@inject SeoSettings seoSettings
@inject IPageHeadBuilder pagebuilder
@inject Grand.Services.Configuration.ISettingService _settings
@{

    Layout = "_ColumnsOne";

    // Styles
    pagebuilder.AddCssFileParts(ResourceLocation.Head, "~/Themes/Corujinha/Content/lib/lightgallery/css/lightgallery.min.css");

    // Scripts
    pagebuilder.AddScriptParts(ResourceLocation.Footer, "~/Themes/Corujinha/Content/lib/lightgallery/js/lightgallery.min.js");
    pagebuilder.AddScriptParts(ResourceLocation.Footer, "~/Themes/Corujinha/Content/lib/lightgallery/js/lg-zoom.min.js");
    pagebuilder.AddScriptParts(ResourceLocation.Footer, "~/Themes/Corujinha/Content/lib/lightgallery/js/lg-thumbnail.min.js");

    //title, meta
    pagebuilder.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    pagebuilder.AddMetaDescriptionParts(Model.MetaDescription);
    pagebuilder.AddMetaKeywordParts(Model.MetaKeywords);

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, this.Url.ActionContext.HttpContext.Request.Scheme);
        pagebuilder.AddCanonicalUrlParts(productUrl);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        pagebuilder.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:image:url\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + this.Url.ActionContext.HttpContext.Request.GetEncodedUrl() + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Model.MetaDescription) + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        pagebuilder.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + this.Url.ActionContext.HttpContext.Request.GetEncodedUrl() + "\" />");
    }

    var freeShippingFlagActive = _settings.GetSettingByKey<bool>("owl.grand.plugin.shipping.melhorenvio.freeshippingflagactive");
    var freeShippingBadge = string.Empty;

    // Verify free shipping
    if (freeShippingFlagActive && !string.IsNullOrEmpty(Model.Flag) && Model.Flag.Contains("free-shipping"))
    {
        freeShippingBadge = "Frete Grátis";

        var flagSplitted = Model.Flag.Split(';');
        foreach (var flag in flagSplitted)
        {
            if (flag.Contains("free-shipping"))
            {
                var individualFlagSplitted = flag.Split(':');
                if (individualFlagSplitted.Length > 1)
                {
                    var states = individualFlagSplitted[1];
                    freeShippingBadge += " para " + string.Join(", ", states.Split(','));
                }
            }
        }
    }
}
<!--product breadcrumb-->
@section Breadcrumb
{
    <partial name="_ProductBreadcrumb" model="Model.Breadcrumb" />
}

<vc:widget widget-zone="productdetails_after_breadcrumb" additional-data="@Model.Id"></vc:widget>
<div class="page product-details-page product-standard">
    <vc:widget widget-zone="productdetails_top" additional-data="@Model.Id"></vc:widget>
    <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
        <div itemscope itemtype="http://schema.org/Product" data-productid="@Model.Id">
            <div class="row p-3">

                <vc:widget widget-zone="productdetails_before_pictures" additional-data="@Model.Id"></vc:widget>
                <!--product pictures-->
                <partial name="_ProductDetailsPictures" model="Model" />
                <vc:widget widget-zone="productdetails_after_pictures" additional-data="@Model.Id"></vc:widget>

                <!-- product side info -->
                <div class="overview col-12 col-md-6 mt-4">
                    <partial name="_Discontinued" model="Model" />
                    <h5 class="text-uppercase" itemprop="name">
                        @Model.Name
                    </h5>

                    <!--product price-->
                    @{
                        var dataDictPrice = new ViewDataDictionary(ViewData);
                        dataDictPrice.TemplateInfo.HtmlFieldPrefix = string.Format("price_{0}", Model.Id);
                    }

                    <partial name="_ProductPrice" model="Model.ProductPrice" view-data="dataDictPrice" />

                    @if(!string.IsNullOrEmpty(freeShippingBadge))
                    {
                        <div class="badges mb-2">
                            <div class="badge bg-success">
                                @freeShippingBadge
                            </div>
                        </div>
                    }

                    <vc:widget widget-zone="productdetails_overview_top" additional-data="@Model.Id"></vc:widget>

                    @if (!String.IsNullOrEmpty(Model.ShortDescription))
                    {
                        <div class="short-description">
                            @Html.Raw(Model.ShortDescription)
                        </div>
                    }

                    <!--manufacturers-->
                    @if (Model.ProductManufacturers.Any())
                    {
                        var m = Model.ProductManufacturers.First();
                        <a class="d-block mt-2 theme-color-primary-dark" href="@Url.RouteUrl("Manufacturer", new { SeName = m.SeName })">@m.Name</a>
                    }

                    <!--availability-->
                    @if (!String.IsNullOrWhiteSpace(Model.StockAvailability) || Model.DisplayBackInStockSubscription)
                    {
                        <partial name="_Availability" model="Model" />
                    }

                    <!--SKU, MAN, GTIN, vendor-->
                    <partial name="_SKU_Man_GTIN_Ven" model="Model" />

                    <!--delivery-->
                    @if ((Model.FreeShippingNotificationEnabled && Model.IsFreeShipping) || !string.IsNullOrWhiteSpace(Model.DeliveryDate)
|| Model.NotReturnable || Model.AdditionalShippingCharge > 0)
                    {
                        <partial name="_DeliveryInfo" model="Model" />
                    }

                    <!--sample download-->
                    @if (Model.HasSampleDownload)
                    {
                        <partial name="_DownloadSample" model="Model" />
                    }

                    <!--product bundles-->
                    @if (Model.ProductBundleModels.Any())
                    {
                        <partial name="_ProductBundles" model="Model" />
                    }

                    <!--attributes-->
                    @{
                        if (Model.ProductAttributes.Any())
                        {
                            var dataDictAttributes = new ViewDataDictionary(ViewData);
                            dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
                            <partial name="_ProductAttributes" model="Model.ProductAttributes" view-data="dataDictAttributes" />
                        }
                    }

                    <!--warehouses-->
                    @if (Model.AllowToSelectWarehouse)
                    {
                        <partial name="_ProductWarehouses" model="Model" />
                    }

                    <!--gift card-->
                    @{
                        if (Model.GiftCard.IsGiftCard)
                        {
                            var dataDictGiftCard = new ViewDataDictionary(ViewData);
                            dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}", Model.Id);
                            <partial name="_GiftCardInfo" model="Model.GiftCard" view-data="dataDictGiftCard" />
                        }
                    }

                    <!--reservation info-->
                    @if (Model.ProductType == ProductType.Reservation)
                    {
                        var dataDictReservation = new ViewDataDictionary(ViewData);
                        dataDictReservation.TemplateInfo.HtmlFieldPrefix = string.Format("reservation_{0}", Model.Id);
                        <partial name="_ReservationInfo" model="Model" view-data="dataDictReservation" />
                    }

                    <hr />

                    <!-- add to cart and actions-->
                    <div class="col-12 add-to-cart d-flex align-items-center row g-0">
                        @if (Model.DisplayDiscontinuedMessage)
                        {
                            <h4>Produto indisponível</h4>
                        }
                        else
                        {
                            var dataDictAddToCart = new ViewDataDictionary(ViewData);
                            dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);

                            <partial name="_AddToCart" model="Model.AddToCart" view-data="dataDictAddToCart" />

                            var dataDictAddToWishlist = new ViewDataDictionary(ViewData);
                            dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
                            dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);

                            <div class="col-12 mt-2 col-lg-auto mt-lg-0">
                                <partial name="_AddToWishlist" model="Model.AddToCart" view-data="dataDictAddToWishlist" />
                            </div>
                        }
                    </div>

                    <!-- shipping info -->
                    <div class="container-light p-3 mt-3">
                        <div class="d-flex flex-column">
                            <label class="form-label">Calcule o frete e prazo de entrega</label>
                            <input class="theme-input rounded me-2 text-center" placeholder="Digite o CEP" type="text" name="shippingCep" id="shipping-cep" style="width: 140px;" />
                            <div class="mt-2 d-flex align-items-center d-none" id="shipping-loading">
                                <span class="icon iconify mx-auto theme-color-primary" data-icon="bi:hourglass-split"></span>
                            </div>
                            <div id="shipping-response" class="mt-2">

                            </div>
                            @*<button type="button" class="btn theme-btn theme-btn-white rounded" style="height: 40px;"><span class="icon-sm iconify me-2" data-icon="bi:truck"></span>Estimar frete</button>*@
                            <script asp-location="Footer" type="text/javascript">
                                $(document).ready(() => {
                                    $("#shipping-cep").on('input', (e) => {
                                        if (e.originalEvent.data !== undefined && !e.originalEvent.data.match(/\d+/g)) {
                                            e.currentTarget.value = e.currentTarget.value.replace(e.originalEvent.data, "");
                                            return false;
                                        };

                                        // Validate
                                        var actualValue = e.currentTarget.value.replace("-", "");

                                        if (actualValue.length > 8) {
                                            actualValue = actualValue.substring(0, 8);
                                        }

                                        // append-filter
                                        var finalValue = actualValue;
                                        if (actualValue.length > 5) {
                                            finalValue = actualValue.slice(0, 5) + "-" + actualValue.slice(5);
                                        }

                                        e.currentTarget.value = finalValue;

                                        if (actualValue.length != 8) return false;

                                        // Get shipping methods
                                        $('#shipping-loading').removeClass('d-none');
                                        $.ajax({
                                            cache: false,
                                            type: "POST",
                                            url: "/ShippingMelhorEnvio/EstimateProductShippingValue",
                                            data: {
                                                productId: '@Model.Id',
                                                cep: actualValue,
                                                quantity: $('addtocart_@(Model.Id)_EnteredQuantity').val()
                                            },
                                            success: function (data) {
                                                if (data.error !== undefined) {
                                                    $('#shipping-response').html("Não foi possível calcular o frete.")
                                                } else {
                                                    $('#shipping-response').html('<div class="mt-2">Fretes disponíveis</div>')
                                                    if (data.length == 0) {
                                                        $('#shipping-response').html('<div class="mt-2">Não foi possível calcular o frete. Verifique o CEP e tente novamente.</div>')
                                                    }
                                                    data.forEach((item) => {
                                                        $('#shipping-response').append('<div><span class="text-success">R$' + item.Rate.toFixed(2) +'</span> - <strong>' + item.Name + '</strong> - '+item.Description+'</div>')
                                                    });

                                                    dataLayer.push({
                                                        'event': 'shipping_calculation',
                                                        'shipping_data': data
                                                    });
                                                }
                                            },
                                            error: function(xhr, ajaxOptions, thrownError) {
                                                displayAjaxLoading();
                                                alert('Failed to retrieve estimate shipping.');
                                            },
                                            complete: function () {
                                                $('#shipping-loading').addClass('d-none');
                                                fbq('trackCustom', 'product-shipping-calc', { cep: actualValue });

                                            }
                                        });
                                        return false;
                                    });

                                    $("#shipping-cep").on("focus", (e) => {
                                        e.currentTarget.value = "";
                                    })
                                });
                            </script>
                        </div>
                    </div>

                    <!-- purchase info -->
                    <div class="mt-4">
                        <div class="d-flex w-100 theme-color-gray-50">
                            <span>Formas de pagamento disponíveis</span>
                        </div>
                        <div class="d-flex w-100">
                            <img src="/Themes/Corujinha/Content/images/payment-methods.png" alt="Métodos de pagamento" class="img-responsive" style="width:100%; max-width:300px">
                        </div>
                        <div class="mt-3">
                            <a class="d-flex align-items-center theme-color-gray-50" href="#" target="_blank" data-bs-toggle="modal" data-bs-target="#payment-info"><span class="icon iconify theme-color-primary me-2" data-icon="mdi:credit-card-outline"></span>Informações de pagamento</a>
                        </div>
                        <div class="mt-3">
                            <a class="d-flex align-items-center theme-color-gray-50" href="#" target="_blank" data-bs-toggle="modal" data-bs-target="#shipping-info"><span class="icon iconify theme-color-primary me-2" data-icon="mdi:truck-outline"></span>Informações de envio</a>
                        </div>
                        <div class="mt-3">
                            <a class="d-flex align-items-center theme-color-gray-50" href="https://wa.me/5511974915290?text=Oi%2C+tenho+uma+d%C3%BAvida+sobre+o+produto+@Model.Name.&lang=pt_br" target="_blank"><span class="icon iconify theme-color-primary me-2" data-icon="mdi:whatsapp"></span>Faça uma pergunta</a>
                        </div>
                    </div>


                    @if (!String.IsNullOrWhiteSpace(Model.PageShareCode))
                    {
                        <div class="col-12 product-share px-0">
                            <partial name="_ShareButton" model="Model" />
                        </div>
                    }
                    <vc:widget widget-zone="productdetails_overview_bottom" additional-data="@Model.Id"></vc:widget>
                </div>
            </div>
            <hr />
            <div class="row p-3 mt-3 mb-4">
                <div class="col-12 p-0">
                    <nav>
                        <div class="nav nav-tabs" id="nav-tab" role="tablist">
                            <a class="nav-link active" id="nav-description-tab" data-bs-toggle="tab" href="#nav-description" role="tab" aria-controls="nav-description" aria-selected="true">Descrição</a>
                            <a class="nav-link" id="nav-contact-tab" data-bs-toggle="tab" href="#nav-contact" role="tab" aria-controls="nav-contact" aria-selected="false">Contato</a>
                        </div>
                    </nav>
                    <div class="tab-content" id="nav-tabContent">
                        <div class="product-description tab-pane fade show active" id="nav-description" role="tabpanel" aria-labelledby="nav-description-tab">
                            <div class="col-12 mt-3">
                                @Html.Raw(Model.FullDescription)
                            </div>
                            @if (Model.ProductManufacturers.Any() || Model.ProductSpecifications.Any())
                            {
                                <div class="col-12 mt-5">
                                    <h5>Especificações</h5>
                                    <table>
                                        <tbody>
                                            @if (Model.ProductManufacturers.Any())
                                            {
                                                <tr>
                                                    <td>Fabricante</td>
                                                    @{
                                                        var m = Model.ProductManufacturers.First();
                                                    }
                                                    <td><a class="d-block mt-2 theme-color-primary-dark" href="@Url.RouteUrl("Manufacturer", new { SeName = m.SeName })">@m.Name</a></td>
                                                </tr>
                                            }
                                            @if (Model.ProductSpecifications.Any())
                                            {
                                                foreach (var spec in Model.ProductSpecifications)
                                                {
                                                    <tr>
                                                        <td>@spec.SpecificationAttributeName</td>
                                                        <td>@Html.Raw(spec.ValueRaw)</td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }

                            @if (Model.ProductTags.Any())
                            {
                                <div class="tags col-12 mt-5">
                                    <h5>Tags</h5>
                                    <hr />
                                    @foreach (var tag in Model.ProductTags)
                                    {
                                        <a class="tag-button d-inline-flex align-items-center text-uppercase small mb-2" href="@Url.RouteUrl("ProductsByTagName", new { SeName = tag.SeName })">
                                            @tag.Name
                                            <span class="tag-button-badge">@tag.ProductCount</span>
                                        </a>
                                    }
                                </div>
                            }
                        </div>
                        <div class="contact tab-pane fade" id="nav-contact" role="tabpanel" aria-labelledby="nav-contact-tab">
                            <h4>Informações para contato</h4>
                            <div class="mt-3">
                                <a class="d-flex align-items-center theme-color-gray-50" href="https://wa.me/5511974915290?text=Oi%2C+tenho+uma+d%C3%BAvida+sobre+o+produto+@Model.Name.&lang=pt_br" target="_blank"><span class="icon iconify theme-color-primary me-2" data-icon="mdi:whatsapp"></span>Envie uma mensagem WhatsApp</a>
                            </div>
                            <div class="mt-3">
                                <a class="d-flex align-items-center theme-color-gray-50" href="mailto:vendas@corujinhapresentes.com.br" target="_blank"><span class="icon iconify theme-color-primary me-2" data-icon="mdi:email-outline"></span>Envie um email para vendas@corujinhapresentes.com.br</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <vc:products-also-purchased product-id="@Model.Id" product-thumb-picture-size="null"></vc:products-also-purchased>
            <vc:related-products product-id="@Model.Id" product-thumb-picture-size="null"></vc:related-products>
            <vc:similar-products product-id="@Model.Id" product-thumb-picture-size="null"></vc:similar-products>
        </div>
    </form>
    <vc:widget widget-zone="productdetails_bottom" additional-data="@Model.Id"></vc:widget>
</div>
@*<script asp-location="Footer">
        $('.product-simple-share .btn').tooltip({
            boundary: 'window',
            template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>'
        });
    </script>*@

<!-- Modal -->
<div class="modal fade" id="payment-info" tabindex="-1" aria-labelledby="payment-info-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" style="text-align:justify">
                <h5 class="modal-title" id="payment-info-label">Informações de pagamento</h5>
                <p>
                    O pagamento em nosso site é realizado através da plataforma totalmente segura do <strong>Mercado Pago</strong>. Quando você finaliza seu pedido, você é redirecionado para o site do <strong>Mercado Pago</strong> para escolher a forma que prefere pagar e realizar o pagamento. As formas de pagamento disponíveis são:
                </p>
                <ul>
                    <li>Cartão de Crédito</li>
                    <li>PIX</li>
                    <li>Boleto bancário</li>
                    <li>Pagamento na lotérica</li>
                    <li>Cartão de débito virtual Caixa</li>
                    <li>Paypal</li>
                    <li>Saldo no Mercado Pago</li>
                </ul>
                <p>
                    Caso tenha dúvidas sobre como prosseguir com o pagamento, podemos te ajudar com isso. Basta enviar uma mensagem Whatsapp para o número (11) 97491-5290.
                </p>
                <button type="button" class="btn theme-btn-primary float-end" data-bs-dismiss="modal">Ok</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="shipping-info" tabindex="-1" aria-labelledby="shipping-info-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" style="text-align:justify">
                <h5 class="modal-title" id="shipping-info-label">Informações de envio</h5>
                <p>
                    O pacote é preparado e enviado em até 24h após a confirmação do pagamento em dias úteis. Temos <strong>seis</strong> opções de envio que dependem da disponibilidade das transportadoras.
                </p>
                <ul>
                    <li>Correios PAC</li>
                    <li>Correios SEDEX</li>
                    <li>Jadlog .Package</li>
                    <li>Jadlog .com</li>
                </ul>
                <p>
                    As outras <strong>duas</strong> opções são para casos especiais:<br /><br />
                    <strong>Frete grátis - </strong> para o estado de São Paulo para compras acima de R$169,00. <br /><br />
                    <strong>Combinar Envio - </strong> para situações onde o frete ultrapassa um certo valor. Neste caso organizamos melhor os itens comprados diminuindo o tamanho do pacote, o que pode diminuir o valor final do frete. Cobramos um valor padrão para combinar o envio para que não ocorram abusos nesta funcionalidade. Caso o valor final de envio seja menor que o valor pago nesta modalidade, a diferença é estornada para o cliente assim que o pacote é enviado.
                </p>
                <button type="button" class="btn theme-btn-primary float-end" data-bs-dismiss="modal">Ok</button>
            </div>
        </div>
    </div>
</div>

<script asp-location="Footer" type="application/ld+json">
    {
      "@("@")context": "https://schema.org/",
      "@("@")type": "Product",
      "name": "@Model.Name",
      "image": [
        "@("https://corujinhapresentes.com.br" + Model.DefaultPictureModel.ImageUrl)"
        @for(var i = 0; i < Model.PictureModels.Count; i++)
        {
            <text>,"@("https://corujinhapresentes.com.br" + Model.PictureModels[i].ImageUrl)"</text>
        }
       ],
      "sku":"@Model.Id",
      "description": "@Model.ShortDescription",
      "gtin": "@Model.Gtin",
      "offers": {
        "@("@")type": "Offer",
        "url": "@this.Url.ActionContext.HttpContext.Request.GetEncodedUrl()",
        "priceCurrency": "@Model.ProductPrice.CurrencyCode",
        "price": "@Model.ProductPrice.PriceValue.ToString(System.Globalization.CultureInfo.InvariantCulture)",
        "priceValidUntil": "@DateTime.Now.AddDays(30).ToShortDateString()",
        "availability": "https://schema.org/InStock"
      }
    }
</script>

<!-- Google Ecommerce -->
<script asp-location="Footer">
    $(document).ready(() => {
        dataLayer.push({
            'event': 'view_item',
            'ecommerce': {
                'items': [
                    {
                        'item_name': '@Model.Name',
                        'item_id': '@Model.Id',
                        'price': @Model.ProductPrice.PriceValue.ToString("F2", System.Globalization.CultureInfo.InvariantCulture),
                        'promotion_name': 'none'
                    }
                ]
            }
        });

        $('.add-to-cart-button').on('click', () => {
            dataLayer.push({
                'event': 'add_to_cart',
                'ecommerce': {
                    'currency': 'BRL',
                    'value': @Model.ProductPrice.PriceValue.ToString("F2", System.Globalization.CultureInfo.InvariantCulture),
                    'items': [
                        {
                            'item_name': '@Model.Name',
                            'item_id': '@Model.Id',
                            'price': @Model.ProductPrice.PriceValue.ToString("F2", System.Globalization.CultureInfo.InvariantCulture),
                            'promotion_name': 'none'
                        }
                    ]
                }
            })
        });
    });
</script>
<!-- End Google Ecommerce -->