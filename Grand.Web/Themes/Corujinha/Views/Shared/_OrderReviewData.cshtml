@model ShoppingCartModel.OrderReviewDataModel
@using Grand.Core.Http;
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@{
    var processPaymentRequest = httpContextAccessor.HttpContext?.Session?.Get<Grand.Services.Payments.ProcessPaymentRequest>("OrderPaymentInfo");
}
<div class="card">
    <div class="card-body">
        <h5>Detalhes do pedido</h5>
        <hr />
        @if (Model.IsShippable)
        {
            <p>
                <strong>Endereço de entrega</strong>
                <br/>
                <strong class="text-muted">@Model.ShippingAddress.FirstName @Model.ShippingAddress.LastName</strong>
                <br/>
                @Model.ShippingAddress.Email
                <br/>
                @if (!String.IsNullOrEmpty(Model.ShippingAddress.FormattedCustomAddressAttributes))
                {
                    @Html.Raw(Model.ShippingAddress.FormattedCustomAddressAttributes)
                    <br/>
                }
                <br/>
                @Model.ShippingAddress.ZipPostalCode
                <br/>
                @Model.ShippingAddress.Address1@(string.IsNullOrEmpty(Model.ShippingAddress.Address2) ? "" : ", " + Model.ShippingAddress.Address2)
                <br/>
                @if (Model.ShippingAddress.CityEnabled)
                {
                    @Model.ShippingAddress.City
                }
                @if (Model.ShippingAddress.CityEnabled && (Model.ShippingAddress.StateProvinceEnabled || Model.ShippingAddress.ZipPostalCodeEnabled))
                {
                    <text>, </text>
                }
                @if (Model.ShippingAddress.StateProvinceEnabled)
                {
                    @Model.ShippingAddress.StateProvinceName
                }
                @Model.PickupAddress.CountryName
                <br/>
                <br/>
                <strong>Método de entrega</strong>
                <br/>
                @Model.ShippingMethod

            </p>
        }
    </div>
</div>