@model ProductOverviewModel
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    string addtowishlistlink = "";
    string quickviewurl = Url.RouteUrl("QuickView-Product", new { productId = Model.Id });

    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (!Model.ShowQty)
    {
        if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
        }
        else
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
        }
        addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    }
    else
    {
        if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
        }
        else
        {
            addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId });
        }
        addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist });
    }
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}

@await Component.InvokeAsync("Widget", new { widgetZone = "productbox_featured_before_content", additionalData = Model })
<div class="featured-product-box-fixed-size">

    <div class="d-flex" >
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">
            <div class="square-box product-picture">
                <div class="square-content">
                    <picture>
                        <source media="(max-width: 480px)" picture-id="@Model.DefaultPictureModel.Id" picture-size="200" />
                        <img class="img-fluid position-absolute top-50 start-50 translate-middle" alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title"
                             @if (!string.IsNullOrEmpty(Model.SecondPictureModel.ImageUrl)) { <text>
                             onmouseover="this.src='@Model.SecondPictureModel.ImageUrl';" onmouseout="this.src='@Model.DefaultPictureModel.ImageUrl';"
                             </text> } />
                    </picture>
                </div>
            </div>
        </a>
        
        <div class="row">
            <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" class="row">
                <div class="col-12 title">
                    <h5>@Model.Name</h5>
                </div>
                <div class="col-12">
                    <div class="prices d-flex flex-wrap @if (Model.ProductType == ProductType.Reservation) { <text>reservation-price</text> } ">
                        @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                        {
                            <span class="text-muted text-decoration-line-through me-2">
                                @Model.ProductPrice.OldPrice
                            </span>
                        }
                        @if (Model.ProductType != ProductType.Auction)
                        {
                            <span class="">
                                @Model.ProductPrice.Price
                            </span>
                        }
                        else
                        {
                            <span class="">
                                @(Model.ProductPrice.HighestBidValue > 0 ? Model.ProductPrice.HighestBid : Model.ProductPrice.StartPrice)
                            </span>
                        }
                        @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                        {
                            <span class="discount-legend w-100">
                                economia de @(Convert.ToInt32((1 - Model.ProductPrice.PriceValue / Model.ProductPrice.OldPriceValue) * 100))%
                            </span>
                        }
                    </div>
                </div>
            </a>
            <div class="col-12">

                <div class="buy-button">
                    @if (!Model.ProductPrice.DisableBuyButton)
                    {
                        var addToCartText = "Comprar";
                        if (Model.ProductType == ProductType.Reservation)
                        {
                            addToCartText = T("ShoppingCart.Reservation").Text;
                        }
                        if (Model.ProductPrice.AvailableForPreOrder)
                        {
                            addToCartText = T("ShoppingCart.PreOrder").Text;
                        }
                        <button type="button" class="justify-content-center text-uppercase" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink', '@Model.ShowQty', '@Model.Id'); return false;">
                            <span>@(addToCartText)</span>
                            <span class="visually-hidden">AddToCart</span>
                        </button>
                    }
                    else
                    {
                        if (Model.ProductType == ProductType.Auction)
                        {
                            var addToCartText = T("ShoppingCart.Bids").Text;
                            <button type="button" class="justify-content-center" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink', 'false', '@Model.Id');return false;">
                                <span>@(addToCartText)</span>
                                <span class="visually-hidden">AddToCart</span>
                            </button>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Badges -->
    @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
    {
        <div class="badges position-absolute top-0">
            <div class="badge bg-danger">
                -@(Convert.ToInt32((1 - Model.ProductPrice.PriceValue / Model.ProductPrice.OldPriceValue) * 100))%
            </div>
        </div>
    }
</div>
