@model MiniShoppingCartModel

@await Component.InvokeAsync("Widget", new { widgetZone = "flyout_shopping_cart_before_content", additionalData = Model })

<aside class="js-offcanvas flycart" data-offcanvas-options='{"modifiers":"right,overlay","modal":true,"resize":false}' id="right">
    <div class="d-flex flex-column p-3 h-100 flyout-cart">
        <div class="d-flex flex-row align-items-center">
            <h5 class="flex-grow-1 m-0">Carrinho</h5>
            <button class="btn" onclick="closeOffcanvas()">Fechar</button>
        </div>

        <div class="flycart-card mt-2 mb-3">
            @if (Model.TotalProducts == 0)
            {
                <span>Você não tem itens no carrinho</span>
            }
            else
            {
                if (Model.TotalProducts == 1)
                {
                    <span>Você tem <a href="/ShoppingCart">1 item</a> no carrinho.</span>
                }
                else
                {
                    <span>Você tem <a href="/ShoppingCart">@Model.TotalProducts itens</a> no carrinho.</span>
                }
            }
        </div>

        @if (Model.TotalProducts > 0)
        {
            <div class="flycart-items d-flex flex-column h-100">
                @foreach(var item in Model.Items)
                {
                    <div class="item d-flex">
                        <div class="picture me-2">
                            <div class="square-box">
                                <div class="square-content">
                                    <a href="@Url.RouteUrl("Product", new { SeName=item.ProductSeName })">
                                        <img class="img-fluid product-picture top-50 start-50 translate-middle position-absolute"
                                             src="@item.Picture.ImageUrl"
                                             title="@item.Picture.Title"
                                             alt="@item.Picture.AlternateText" />
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="info">
                            <h5>@item.ProductName</h5>
                            <p>@item.Quantity x <span class="price">@item.UnitPrice</span></p>
                            <button class="btn-rounded small" onclick="deletecartitem('@Url.RouteUrl("DeleteCartItem", new { id=item.Id })')"><span class="icon-sm iconify" data-icon="mdi:close"></span></button>
                        </div>
                    </div>
                }
            </div>
            <div class="footer flycart-card">
                <div class="d-flex justify-content-between mb-2">
                    <span>Subtotal</span>
                    <span>@Model.SubTotal</span>
                </div>

                <div class="payment-info d-flex justify-content-center mb-5">
                    <img src="/Themes/Corujinha/Content/images/payment-methods.png" alt="Métodos de pagamento" class="img-responsive" style="width:100%; max-width:300px">
                </div>

                <div class="d-flex justify-content-end">
                    <a class="btn theme-btn-primary rounded text-uppercase mt-2" href="@Url.RouteUrl("ShoppingCart")"><span class="icon-sm iconify me-2" data-icon="bi:cart3"></span>Carrinho</a>
                    @{ 
                        var checkoutUrl = "";
                        if (Model.AnonymousCheckoutAllowed && Model.CurrentCustomerIsGuest)
                        {
                            checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
                        }
                        else
                        {
                            checkoutUrl = Url.RouteUrl("Checkout");
                        }
                    }
                    <button class="btn theme-btn-primary rounded text-uppercase ms-2 mt-2" onclick="setLocation('@checkoutUrl')"><span class="icon-sm iconify me-2" data-icon="bi:credit-card"></span>Finalizar</button>
                </div>
            </div>
        }
    </div>
</aside>